/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apm;

import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.net.URL;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author V
 */
public class adesao extends javax.swing.JFrame {

    //inicializando variavel global , para nao ter de instanciala infinitas vezes
    functions func = new functions();

    /**
     * Creates new form pedidos
     */
    public adesao() {
        initComponents();
        this.setLocationRelativeTo(null);
        //s.getContentPane().setBackground(Color.blue);
        URL url = this.getClass().getResource("icone.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(iconeTitulo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Adesões");
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 142, 1140, 520));

        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 290, -1));

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 770, -1));

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel1.setText("Pesquisar:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, -1, -1));

        jLabel8.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel8.setText("Curso:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        jLabel9.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel9.setText("Modelo:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apm/math-add-icon (1).png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apm/pencil-icon.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apm/Windows-Close-Program-icon (1).png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apm/refresh.png"))); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 10, -1, -1));
        jLabel10.getAccessibleContext().setAccessibleParent(this);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setAutoscrolls(true);
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setEnabled(false);
        jPanel1.setMaximumSize(getMaximumSize());

        jButton5.setText("Pesquisar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(51, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apm/Excel-icon_1.png"))); // NOI18N
        jButton7.setText("CONVERTER PARA EXCEL");
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apm/obs.png"))); // NOI18N
        jButton8.setText("OBSERVAÇÃO");
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Etim", "Técnico", "Camiseta" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jRadioButton1.setBackground(new java.awt.Color(0, 153, 204));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jRadioButton1.setText("1º Semestre");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(0, 153, 204));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jRadioButton2.setText("2º Semestre");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel5.setText("Ano:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(1033, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(861, 861, 861))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1870, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 2000, 2000));
        jPanel1.getAccessibleContext().setAccessibleParent(jPanel1);

        setBounds(0, 0, 1179, 714);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        fill();
        DefaultTableModel tabela = new DefaultTableModel();
        String selecionado = jComboBox1.getSelectedItem().toString();
        try {

            String curso = jComboBox2.getSelectedItem().toString();

            ResultSet rs = null;
            if (selecionado.equals("Etim")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Etim' ORDER BY nome ASC;");
                System.out.println("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Etim' ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        tabela.addRow(tudo);
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        tabela.addRow(tudo);
                    }

                    i++;
                }
            } else if (selecionado.equals("Técnico")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Técnico' ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        tabela.addRow(tudo);
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        tabela.addRow(tudo);
                    }

                    i++;
                }
            } else if (selecionado.equals("Camiseta")) {
                tabela.addColumn("<html><b>CÓDIGO</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>SOCIO</b></html>");
                tabela.addColumn("<html><b>MODALIDADE</b></html>");
                tabela.addColumn("<html><b>CURSO</b></html>");
                tabela.addColumn("<html><b>DATA</b></html>");
                tabela.addColumn("<html><b>QTDE</b></html>");
                tabela.addColumn("<html><b>MODELO</b></html>");
                tabela.addColumn("<html><b>TAM</b></html>");
                tabela.addColumn("<html><b>COR</b></html>");
                tabela.addColumn("<html><b>VALOR PAGO</b></html>");
                tabela.addColumn("<html><b>VALOR Á PAGAR</b></html>");
                tabela.addColumn("<html><b>DATA 1º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>DATA 2º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>SITUAÇÃO DO PEDIDO</b></html>");
                tabela.addColumn("<html><b>DATA DA ENTREGA</b></html>");

                String res = func.listTabela("SELECT * FROM adesao_camiseta  WHERE curso='" + curso + "' ORDER BY nome ASC");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], partes_partes[17]};
                        tabela.addRow(tudo);
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], ""};
                        tabela.addRow(tudo);
                    }

                    i++;
                }

            }

        } catch (Exception e) {
        }
        jTable1.setModel(tabela);
        if (selecionado.equals("Camiseta")) {
            verificar_camiseta();
            jTable1.setModel(tabela);
            verificar_obs();
        } else if (selecionado.equals("Etim") || selecionado.equals("Técnico")) {

            verificar_etim();
            jTable1.setModel(tabela);
            verificar_obs();
        }
    }//GEN-LAST:event_formWindowOpened

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        DefaultTableModel tabela = new DefaultTableModel();
        String selecionado = jComboBox1.getSelectedItem().toString();
        try {

            String curso = jComboBox2.getSelectedItem().toString();

            ResultSet rs = null;
            if (selecionado.equals("Etim")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Etim' ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        tabela.addRow(tudo);
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        tabela.addRow(tudo);
                    }

                    i++;
                }
            } else if (selecionado.equals("Técnico")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Técnico' ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        tabela.addRow(tudo);
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        tabela.addRow(tudo);
                    }

                    i++;
                }
            } else if (selecionado.equals("Camiseta")) {
                tabela.addColumn("<html><b>CÓDIGO</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>SOCIO</b></html>");
                tabela.addColumn("<html><b>MODALIDADE</b></html>");
                tabela.addColumn("<html><b>CURSO</b></html>");
                tabela.addColumn("<html><b>DATA</b></html>");
                tabela.addColumn("<html><b>QTDE</b></html>");
                tabela.addColumn("<html><b>MODELO</b></html>");
                tabela.addColumn("<html><b>TAM</b></html>");
                tabela.addColumn("<html><b>COR</b></html>");
                tabela.addColumn("<html><b>VALOR PAGO</b></html>");
                tabela.addColumn("<html><b>VALOR Á PAGAR</b></html>");
                tabela.addColumn("<html><b>DATA 1º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>DATA 2º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>SITUAÇÃO DO PEDIDO</b></html>");
                tabela.addColumn("<html><b>DATA DA ENTREGA</b></html>");

                String res = func.listTabela("SELECT * FROM adesao_camiseta  WHERE curso='" + curso + "' ORDER BY nome ASC");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], partes_partes[17]};
                        tabela.addRow(tudo);

                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], ""};
                        tabela.addRow(tudo);
                    }

                    i++;
                }

            }

        } catch (Exception e) {
        }
        jTable1.setModel(tabela);
        if (selecionado.equals("Camiseta")) {
            verificar_camiseta();
            jTable1.setModel(tabela);
            verificar_obs();
        } else if (selecionado.equals("Etim") || selecionado.equals("Técnico")) {

            verificar_etim();
            jTable1.setModel(tabela);
            verificar_obs();
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged
    public void verificar_obs() {
        String res = func.listObs("SELECT * FROM observacoes WHERE tipo='" + jComboBox1.getSelectedItem() + "'");
        String partes[] = res.split(";");

        int quant = jTable1.getRowCount();
        int i = 0;
        while (i < quant) {
            String cod = jTable1.getValueAt(i, 0).toString();
            int k = 0;
            while (k < partes.length) {
                if (cod.equals(partes[k])) {
                    jTable1.setValueAt("<html><ul><li>" + cod + "</li></ul></html>", i, 0);
                    break;
                } else {

                }
                k++;
            }

            i++;
        }

    }

    public void verificar_camiseta() {
        TableModel tabela = jTable1.getModel();
        int quant = tabela.getRowCount();
        int i = 0;
        while (i < quant) {

            // String partes[] = valor.split("R$");
            //System.out.println(partes[0] + "=" + partes[0].length());
            //System.out.println(valor);
            try {

                int qtd = tabela.getColumnCount();
                int k = 1;
                String cor = "";
                while (k < qtd) {
                    String valor = tabela.getValueAt(i, k).toString();
                    String valor2 = tabela.getValueAt(i, 16).toString();

                    //tabela.setValueAt("<html><font color=\"red\">"+valor+"</font></html>", i, k);
                    //tabela.setValueAt("<html><font color=\"red\">" + valor + "</font></html>", i, k);
                    if (valor2.equalsIgnoreCase("entregue")) {
                        cor = "blue";
                    } else if (valor2.equalsIgnoreCase("encomendar")) {
                        cor = "#8B4513";
                    } else if (valor2.equalsIgnoreCase("encomendado")) {
                        cor = "purple";
                    } else if (valor2.equalsIgnoreCase("entregar")) {
                        cor = "green";
                    } else if (valor2.equalsIgnoreCase("Pagamento pendente") || valor.equalsIgnoreCase("pg pendente")) {
                        cor = "red";
                    }
                    tabela.setValueAt("<html><font color=\"" + cor + "\">" + valor + "</font></html>", i, k);
                    tabela.setValueAt("<html><font color=\"" + cor + "\">" + tabela.getValueAt(i, 17).toString() + "</font></html>", i, 17);

                    k++;
                }

            } catch (Exception e) {
            }

            i++;
        }
    }

    public void verificar_etim() {
        System.out.println("chamou a funçao");
        TableModel tabela = jTable1.getModel();
        int quant = tabela.getRowCount();
        int i = 0;
        while (i < quant) {

            try {

                int qtd = tabela.getColumnCount();
                int k = 1;
                String cor = "";

                //valor pago
                String valor2 = tabela.getValueAt(i, 5).toString();
                //valor a pagar
                String valor3 = tabela.getValueAt(i, 6).toString();
                //se os dois tem coisa

                Boolean pagar = false;
                Boolean receber = false;
                try {
                    String partes[] = valor2.split("R$");
                    partes[0] = valor2.replace("R$", "");
                    System.out.println(partes[0]);
                    //nao pagou
                    if (partes[0].equals(" 0,00") || partes[0].equals(" 0.00") || partes[0].equals("0") || partes[0].equals("")) {
                        pagar = true;
                    } else {
                        pagar = false;
                    }
                } catch (Exception e) {
                    System.out.println(e + "\n");
                    pagar = true;
                }

                try {
                    String partes2[] = valor3.split("R$");
                    partes2[0] = valor3.replace("R$", "");
                    System.out.println(partes2[0]);
                    //nao pagou
                    if (partes2[0].equals(" 0,00") || partes2[0].equals(" 0.00") || partes2[0].equals("0") || partes2[0].equals("")) {
                        receber = true;
                    } else {
                        receber = false;
                    }
                } catch (Exception e) {
                    System.out.println(e + "\n");
                    receber = true;
                }

                while (k < qtd) {
                    String valor = tabela.getValueAt(i, k).toString();
                    //se o cara nao pagou no dia e não pagou ate agr
                    if (pagar == true && receber == true) {
                        cor = "red";
                    } //se o cara pagou no dia e nao pagou até agr
                    else if (pagar == true && receber == false) {
                        cor = "red";
                    } //se o cara pagou no dia e pagou ate hoje
                    else if (pagar == false && receber == false) {
                        cor = "#8B4513";
                    } //se o cara nao pagou mas ja recebeu nem que seje uma parte
                    else if (pagar == false && receber == true) {
                        cor = "blue";
                    }
                    tabela.setValueAt("<html><font color=\"" + cor + "\">" + valor + "</font></html>", i, k);
                    k++;
                }

                /*
                 String partes[] = valor2.split("R$");
                 String partes2[] = valor3.split("R$");
                 if(partes[1].equals(" 0,00") || partes[1].equals("") &&  (partes2[1].length() > 0))
                 {
                 cor = "red";
                 }
                 else if((partes[1].length() > 0) &&  (partes2[1].length() > 0))
                 {
                 cor = "yellow";
                 }
                 else if((partes[1].length() > 0) &&  partes2[1].equals(" 0,00") || partes2[1].equals(""))
                 {
                 cor = "blue";
                 }
                 */
                //tabela.setValueAt("<html><font color=\""+cor+"\">" + tabela.getValueAt(i, 17).toString() + "</font></html>", i, 17);
            } catch (Exception e) {
            }

            i++;
        }
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        DefaultTableModel tabela = new DefaultTableModel();
        String selecionado = jComboBox1.getSelectedItem().toString();
        try {

            String curso = jComboBox2.getSelectedItem().toString();

            ResultSet rs = null;
            if (selecionado.equals("Etim")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Etim' ORDER BY nome ASC;");
                System.out.println("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Etim' ORDER BY nome ASC;");
                System.out.println(res);
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        tabela.addRow(tudo);
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        tabela.addRow(tudo);
                    }

                    i++;
                }
            } else if (selecionado.equals("Técnico")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Técnico' ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        tabela.addRow(tudo);
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        tabela.addRow(tudo);
                    }

                    i++;
                }
            } else if (selecionado.equals("Camiseta")) {
                tabela.addColumn("<html><b>CÓDIGO</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>SOCIO</b></html>");
                tabela.addColumn("<html><b>MODALIDADE</b></html>");
                tabela.addColumn("<html><b>CURSO</b></html>");
                tabela.addColumn("<html><b>DATA</b></html>");
                tabela.addColumn("<html><b>QTDE</b></html>");
                tabela.addColumn("<html><b>MODELO</b></html>");
                tabela.addColumn("<html><b>TAM</b></html>");
                tabela.addColumn("<html><b>COR</b></html>");
                tabela.addColumn("<html><b>VALOR PAGO</b></html>");
                tabela.addColumn("<html><b>VALOR Á PAGAR</b></html>");
                tabela.addColumn("<html><b>DATA 1º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>DATA 2º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>SITUAÇÃO DO PEDIDO</b></html>");
                tabela.addColumn("<html><b>DATA DA ENTREGA</b></html>");

                String res = func.listTabela("SELECT * FROM adesao_camiseta  WHERE curso='" + curso + "' ORDER BY nome ASC");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], partes_partes[17]};
                        tabela.addRow(tudo);
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], ""};
                        tabela.addRow(tudo);
                    }

                    i++;
                }

            }

        } catch (Exception e) {
        }
        jTable1.setModel(tabela);
        if (selecionado.equals("Camiseta")) {
            verificar_camiseta();
            jTable1.setModel(tabela);
            verificar_obs();
        } else if (selecionado.equals("Etim") || selecionado.equals("Técnico")) {
            verificar_etim();
            jTable1.setModel(tabela);
            verificar_obs();
        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        DefaultTableModel tabela = new DefaultTableModel();
        String digita = jTextField1.getText();
        if (digita.equals("")) {
            JOptionPane.showMessageDialog(this, "Digite algo para pesquisar, por favor!");
        } else {
            String selecionado = jComboBox1.getSelectedItem().toString();
            String curso = jComboBox2.getSelectedItem().toString();
            if (selecionado.equals("Etim")) {

                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE cod LIKE \"%" + digita + "%\" OR nome LIKE \"%" + digita + "%\" OR responsavel LIKE \"%" + digita + "%\" OR data_ins LIKE \"%" + digita + "%\"  OR valor_apm_camiseta LIKE \"%" + digita + "%\" OR pago LIKE \"%" + digita + "%\" OR receber LIKE \"%" + digita + "%\" OR data_1 LIKE \"%" + digita + "%\" OR data_2 LIKE \"%" + digita + "%\" OR rec_1 LIKE \"%" + digita + "%\" OR respon_rece LIKE \"%" + digita + "%\" OR rec_2 LIKE \"%" + digita + "%\" OR respon_rece2 LIKE \"%" + digita + "%\" ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                try {
                    for (i = 0; i < partes.length; i++) {
                        String partes_partes[] = partes[i].split(";");
                        System.out.println("Etim:" + res);
                        try {
                            String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                            tabela.addRow(tudo);
                        } catch (Exception e) {
                            String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                            tabela.addRow(tudo);
                        }

                    }
                } catch (Exception e) {
                    System.out.println(e);
                }

            } else if (selecionado.equals("Técnico")) {

                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE cod LIKE \"%" + digita + "%\" OR nome LIKE \"%" + digita + "%\" OR responsavel LIKE \"%" + digita + "%\" OR data_ins LIKE \"%" + digita + "%\"  OR valor_apm_camiseta LIKE \"%" + digita + "%\" OR pago LIKE \"%" + digita + "%\" OR receber LIKE \"%" + digita + "%\" OR data_1 LIKE \"%" + digita + "%\" OR data_2 LIKE \"%" + digita + "%\" OR rec_1 LIKE \"%" + digita + "%\" OR respon_rece LIKE \"%" + digita + "%\" OR rec_2 LIKE \"%" + digita + "%\" OR respon_rece2 LIKE \"%" + digita + "%\" ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;

                try {
                    for (i = 0; i < partes.length; i++) {
                        String partes_partes[] = partes[i].split(";");
                        System.out.println("Etim:" + res);
                        try {
                            String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                            tabela.addRow(tudo);
                        } catch (Exception e) {
                            String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                            tabela.addRow(tudo);
                        }

                    }
                } catch (Exception e) {
                    System.out.println(e);
                }

            } else if (selecionado.equals("Camiseta")) {

                tabela.addColumn("<html><b>CÓDIGO</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>SOCIO</b></html>");
                tabela.addColumn("<html><b>MODALIDADE</b></html>");
                tabela.addColumn("<html><b>CURSO</b></html>");
                tabela.addColumn("<html><b>DATA</b></html>");
                tabela.addColumn("<html><b>QTDE</b></html>");
                tabela.addColumn("<html><b>MODELO</b></html>");
                tabela.addColumn("<html><b>TAM</b></html>");
                tabela.addColumn("<html><b>COR</b></html>");
                tabela.addColumn("<html><b>VALOR PAGO</b></html>");
                tabela.addColumn("<html><b>VALOR Á PAGAR</b></html>");
                tabela.addColumn("<html><b>DATA 1º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>DATA 2º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>SITUAÇÃO DO PEDIDO</b></html>");
                tabela.addColumn("<html><b>DATA DA ENTREGA</b></html>");

                String res = func.listTabela("SELECT * FROM adesao_camiseta WHERE cod LIKE \"%" + digita + "%\" OR nome LIKE \"%" + digita + "%\" OR socio LIKE \"%" + digita + "%\" OR modalidade LIKE \"%" + digita + "%\"  OR curso LIKE \"%" + digita + "%\" OR data LIKE \"%" + digita + "%\" OR qtde LIKE \"%" + digita + "%\" OR modelo LIKE \"%" + digita + "%\" OR tam LIKE \"%" + digita + "%\" OR cor LIKE \"%" + digita + "%\" OR valor_pago LIKE \"%" + digita + "%\" OR valor_pagar LIKE \"%" + digita + "%\" OR primeiro_pagamento LIKE \"%" + digita + "%\" OR responsavel_recebimento LIKE \"%" + digita + "%\" OR segundo_pagamento LIKE \"%" + digita + "%\" OR responsavel_recebimento2 LIKE \"%" + digita + "%\" OR situacao LIKE \"%" + digita + "%\" OR entrega LIKE \"%" + digita + "%\" ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                try {
                    for (i = 0; i < partes.length; i++) {
                        String partes_partes[] = partes[i].split(";");
                        try {
                            String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], partes_partes[17]};
                            tabela.addRow(tudo);
                        } catch (Exception e) {
                            String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], ""};
                            tabela.addRow(tudo);
                        }

                    }
                } catch (Exception e) {
                    System.out.println(e);
                }

            }
            jTextField1.setText("");
            jTable1.setModel(tabela);
            if (selecionado.equals("Camiseta")) {
                verificar_camiseta();
                jTable1.setModel(tabela);
                verificar_obs();
            } else if (selecionado.equals("Etim") || selecionado.equals("Técnico")) {

                verificar_etim();
                jTable1.setModel(tabela);
                verificar_obs();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        new Thread(new Runnable() {
            public void run() {
                func.csv();
                vailogo();

            }
        }).start();
    }//GEN-LAST:event_jButton7ActionPerformed
    public void vailogo() {
        JOptionPane.showMessageDialog(this, "Excel gerado com sucesso!");

    }
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int selecionado = jTable1.getSelectedRow();
        String codigo = jTable1.getValueAt(selecionado, 0).toString();
        System.out.println(codigo);
        obs ob = new obs();
        ob.cod = removeHTML(codigo);
        ob.tipo = jComboBox1.getSelectedItem().toString();
        ob.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        String tipo = jComboBox1.getSelectedItem().toString();
        int selecionado = jTable1.getSelectedRow();
        if (selecionado < 0) {
            JOptionPane.showMessageDialog(this, "Selecione um dado para editar!");

        } else if (tipo.equals("Camiseta")) {
            int i = 0;
            int qtd_cols = jTable1.getColumnCount();

            String valores[] = new String[100];
            String items = "";
            while (i < qtd_cols) {
                valores[i] = jTable1.getValueAt(selecionado, i).toString();
                i++;
            }
            int k = 0;
            int p = 0;
            try {
                while (valores[k] != null) {
                    p += 1;
                    k++;
                }
            } catch (Exception e) {
            }
            i = 0;
            String data = "";
            while (i < k) {
                data += valores[i] + ";";
                i++;
            }
            i = 0;

            try {
                while (jTable1.getColumnName(i).toString() != null) {
                    items += jTable1.getColumnName(i).toString() + ";";
                    i++;
                }
            } catch (Exception e) {
                System.out.println(e);
            }
            editar_cam ed = new editar_cam();

            //data = data.replace("</html>","");
            ed.res = removeHTML(data);
            ed.setVisible(true);
        } else {
            int i = 0;
            int qtd_cols = jTable1.getColumnCount();

            String valores[] = new String[100];
            String items = "";
            while (i < qtd_cols) {
                valores[i] = jTable1.getValueAt(selecionado, i).toString();
                i++;
            }
            int k = 0;
            int p = 0;
            try {
                while (valores[k] != null) {
                    p += 1;
                    k++;
                }
            } catch (Exception e) {
            }
            i = 0;
            String data = "";
            while (i < k) {
                data += valores[i] + ";";
                i++;
            }
            i = 0;

            try {
                while (jTable1.getColumnName(i).toString() != null) {
                    items += jTable1.getColumnName(i).toString() + ";";
                    i++;
                }
            } catch (Exception e) {
                System.out.println(e);
            }
            editar_etim ed = new editar_etim();
            ed.res = removeHTML(data);
            ed.modalidade = tipo;
            ed.curso2 = jComboBox2.getSelectedItem().toString();
            ed.setVisible(true);
        }
    }//GEN-LAST:event_jLabel3MouseClicked
    public String removeHTML(String text) {
        String tags[] = {"<html>", "</html>", "<font color=\"red\">", "<font color=\"#8B4513\">", "<font color=\"blue\">", "<font color=\"green\">", "<font color=\"purple\">", "</font>", "<font color=\"\">", "<ul>", "</ul>", "<li>", "</li>"};
        int contador = 0;
        while (contador < tags.length) {
            text = text.replace(tags[contador], "");
            contador++;
        }
        return text;
    }
    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        int selecionado = jTable1.getSelectedRow();
        String curso = jComboBox2.getSelectedItem().toString();
        if (selecionado < 0) {
            JOptionPane.showMessageDialog(this, "Selecione um dado para deletar!");
        } else {
            String tipo = jComboBox1.getSelectedItem().toString();
            String tab = "";
            if (tipo.equals("Camiseta")) {
                tab = "adesao_camiseta";
            } else if (tipo.equals("Etim") || tipo.equals("Técnico")) {
                tab = "adesao_etim";
            }

            String cod = jTable1.getValueAt(selecionado, 0).toString();
            String sql = "DELETE FROM " + tab + " WHERE cod=" + cod + "";
            func.sql(sql);
            adesao frm = new adesao();
            frm.setVisible(true);
            frm.jComboBox1.setSelectedItem(tipo);
            frm.jComboBox2.setSelectedItem(curso);
            this.dispose();
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        int res = qualAdesao();
        if (res == 0) {
            insert_adesao frm = new insert_adesao();
            frm.setVisible(true);
        } else if (res == 1) {
            insert_cam frm = new insert_cam();
            frm.setVisible(true);
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        String valor1 = jComboBox1.getSelectedItem().toString();
        String valor2 = jComboBox2.getSelectedItem().toString();
        this.dispose();
        adesao frm = new adesao();
        frm.setVisible(true);
        frm.jComboBox1.setSelectedItem(valor1);
        frm.jComboBox2.setSelectedItem(valor2);
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        DefaultTableModel tabela = new DefaultTableModel();
        String selecionado = jComboBox1.getSelectedItem().toString();
        try {

            String curso = jComboBox2.getSelectedItem().toString();

            ResultSet rs = null;
            if (selecionado.equals("Etim")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Etim' ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {

                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes > 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes > 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    }

                    i++;
                }
            } else if (selecionado.equals("Técnico")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Técnico' ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes > 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes > 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    }

                    i++;
                }
            } else if (selecionado.equals("Camiseta")) {
                tabela.addColumn("<html><b>CÓDIGO</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>SOCIO</b></html>");
                tabela.addColumn("<html><b>MODALIDADE</b></html>");
                tabela.addColumn("<html><b>CURSO</b></html>");
                tabela.addColumn("<html><b>DATA</b></html>");
                tabela.addColumn("<html><b>QTDE</b></html>");
                tabela.addColumn("<html><b>MODELO</b></html>");
                tabela.addColumn("<html><b>TAM</b></html>");
                tabela.addColumn("<html><b>COR</b></html>");
                tabela.addColumn("<html><b>VALOR PAGO</b></html>");
                tabela.addColumn("<html><b>VALOR Á PAGAR</b></html>");
                tabela.addColumn("<html><b>DATA 1º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>DATA 2º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>SITUAÇÃO DO PEDIDO</b></html>");
                tabela.addColumn("<html><b>DATA DA ENTREGA</b></html>");

                String res = func.listTabela("SELECT * FROM adesao_camiseta  WHERE curso='" + curso + "' ORDER BY nome ASC");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], partes_partes[17]};
                       int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes > 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], ""};
                       int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes > 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    }

                    i++;
                }

            }

        } catch (Exception e) {
        }
        jTable1.setModel(tabela);
        if (selecionado.equals("Camiseta")) {
            verificar_camiseta();
            jTable1.setModel(tabela);
            verificar_obs();
        } else if (selecionado.equals("Etim") || selecionado.equals("Técnico")) {
            verificar_etim();
            jTable1.setModel(tabela);
            verificar_obs();
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        DefaultTableModel tabela = new DefaultTableModel();
        String selecionado = jComboBox1.getSelectedItem().toString();
        try {

            String curso = jComboBox2.getSelectedItem().toString();

            ResultSet rs = null;
            if (selecionado.equals("Etim")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Etim' ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {

                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes < 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes < 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    }

                    i++;
                }
            } else if (selecionado.equals("Técnico")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Técnico' ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes < 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes < 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    }

                    i++;
                }
            } else if (selecionado.equals("Camiseta")) {
                tabela.addColumn("<html><b>CÓDIGO</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>SOCIO</b></html>");
                tabela.addColumn("<html><b>MODALIDADE</b></html>");
                tabela.addColumn("<html><b>CURSO</b></html>");
                tabela.addColumn("<html><b>DATA</b></html>");
                tabela.addColumn("<html><b>QTDE</b></html>");
                tabela.addColumn("<html><b>MODELO</b></html>");
                tabela.addColumn("<html><b>TAM</b></html>");
                tabela.addColumn("<html><b>COR</b></html>");
                tabela.addColumn("<html><b>VALOR PAGO</b></html>");
                tabela.addColumn("<html><b>VALOR Á PAGAR</b></html>");
                tabela.addColumn("<html><b>DATA 1º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>DATA 2º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>SITUAÇÃO DO PEDIDO</b></html>");
                tabela.addColumn("<html><b>DATA DA ENTREGA</b></html>");

                String res = func.listTabela("SELECT * FROM adesao_camiseta  WHERE curso='" + curso + "' ORDER BY nome ASC");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], partes_partes[17]};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes < 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], ""};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (mes < 6 && jComboBox3.getSelectedItem().equals(""+ano)) {

                        } else {
                            tabela.addRow(tudo);
                        }
                    }

                    i++;
                }

            }

        } catch (Exception e) {
        }
        jTable1.setModel(tabela);
        if (selecionado.equals("Camiseta")) {
            verificar_camiseta();
            jTable1.setModel(tabela);
            verificar_obs();
        } else if (selecionado.equals("Etim") || selecionado.equals("Técnico")) {
            verificar_etim();
            jTable1.setModel(tabela);
            verificar_obs();
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        DefaultTableModel tabela = new DefaultTableModel();
        String selecionado = jComboBox1.getSelectedItem().toString();
        try {

            String curso = jComboBox2.getSelectedItem().toString();

            ResultSet rs = null;
            if (selecionado.equals("Etim")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Etim' ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {

                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (jRadioButton1.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes < 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        } else if (jRadioButton2.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes > 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        }
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (jRadioButton1.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes < 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        } else if (jRadioButton2.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes > 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        }
                    }

                    i++;
                }
            } else if (selecionado.equals("Técnico")) {
                tabela.addColumn("<html><b>Nº</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL</b></html>");
                tabela.addColumn("<html><b>DATA DA INSC</b></html>");
                tabela.addColumn("<html><b>VALOR - APM/CAMISETA</b></html>");
                tabela.addColumn("<html><b>PAGO</b></html>");
                tabela.addColumn("<html><b>A RECEBER</b></html>");
                tabela.addColumn("<html><b>DATA 1° PAGTO</b></html>");
                tabela.addColumn("<html><b>DATA 2° PAGTO</b></html>");
                tabela.addColumn("<html><b>REC. 1° PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>REC.  2°  PGTO</b></html>");
                tabela.addColumn("<html><b>RESP. PELO RECEBIMENTO</b></html>");

                String res = func.listTecnico("SELECT * FROM adesao_etim WHERE nome_curso='" + curso + "' AND modalidade='Técnico' ORDER BY nome ASC;");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14]};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (jRadioButton1.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes < 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        } else if (jRadioButton2.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes > 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        }
                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], ""};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (jRadioButton1.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes < 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        } else if (jRadioButton2.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes > 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        }
                    }

                    i++;
                }
            } else if (selecionado.equals("Camiseta")) {
                tabela.addColumn("<html><b>CÓDIGO</b></html>");
                tabela.addColumn("<html><b>NOME</b></html>");
                tabela.addColumn("<html><b>SOCIO</b></html>");
                tabela.addColumn("<html><b>MODALIDADE</b></html>");
                tabela.addColumn("<html><b>CURSO</b></html>");
                tabela.addColumn("<html><b>DATA</b></html>");
                tabela.addColumn("<html><b>QTDE</b></html>");
                tabela.addColumn("<html><b>MODELO</b></html>");
                tabela.addColumn("<html><b>TAM</b></html>");
                tabela.addColumn("<html><b>COR</b></html>");
                tabela.addColumn("<html><b>VALOR PAGO</b></html>");
                tabela.addColumn("<html><b>VALOR Á PAGAR</b></html>");
                tabela.addColumn("<html><b>DATA 1º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>DATA 2º PAG.</b></html>");
                tabela.addColumn("<html><b>RESPONSÁVEL PELO RECEBIMENTO</b></html>");
                tabela.addColumn("<html><b>SITUAÇÃO DO PEDIDO</b></html>");
                tabela.addColumn("<html><b>DATA DA ENTREGA</b></html>");

                String res = func.listTabela("SELECT * FROM adesao_camiseta  WHERE curso='" + curso + "' ORDER BY nome ASC");
                String partes[] = res.split("&");
                int i = 0;
                int k = 0;

                while (partes[i] != null) {
                    String partes_partes[] = partes[i].split(";");
                    try {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], partes_partes[17]};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (jRadioButton1.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes < 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        } else if (jRadioButton2.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes > 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        }

                    } catch (Exception e) {
                        String[] tudo = {partes_partes[0], partes_partes[1], partes_partes[2], partes_partes[3], partes_partes[4], partes_partes[5], partes_partes[6], partes_partes[7], partes_partes[8], partes_partes[9], partes_partes[10], partes_partes[11], partes_partes[12], partes_partes[13], partes_partes[14], partes_partes[15], partes_partes[16], ""};
                        int mes = Integer.parseInt(func.data(partes_partes[5], "mes"));
                        int ano = Integer.parseInt(func.data(partes_partes[5], "ano"));
                        if (jRadioButton1.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes < 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        } else if (jRadioButton2.isSelected() == true) {
                            if (jComboBox3.getSelectedItem().toString().equals("" + ano) && mes > 6) {
                                tabela.addRow(tudo);
                            } else {

                            }
                        }
                    }

                    i++;
                }

            }

        } catch (Exception e) {
        }
        jTable1.setModel(tabela);
        if (selecionado.equals("Camiseta")) {
            verificar_camiseta();
            jTable1.setModel(tabela);
            verificar_obs();
        } else if (selecionado.equals("Etim") || selecionado.equals("Técnico")) {
            verificar_etim();
            jTable1.setModel(tabela);
            verificar_obs();
        }
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    public int qualAdesao() {
        int res = 0;
        int i = JOptionPane.showOptionDialog(null,
                "Onde deseja adicionar?",
                "Feedback",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.INFORMATION_MESSAGE,
                null,
                new String[]{"Adesão", "Camiseta"}, null);
        return i;
    }

    public void fill() {
        try {
            functions func = new functions();
            DefaultComboBoxModel lista = new DefaultComboBoxModel();
            String res = func.listCurso("SELECT * FROM curso ORDER BY nome ASC;");
            String partes[] = res.split("&");
            int i = 0;
            while (i < partes.length) {
                lista.addElement(partes[i]);
                i++;
            }

            jComboBox2.setModel(lista);
        } catch (Exception e) {
            System.out.println(e);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adesao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adesao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adesao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adesao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adesao().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    public javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
